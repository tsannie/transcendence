@import '../../const.style.scss';

$number_ball: 11;

.bg {
  position: fixed;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.bg__hideball {
  img {
    width: calc(60 * var(--res));
  }
  position: absolute;
  bottom: 0;
};

.ball {
  position: absolute;
  left: -5%;
  top: -5%;
  width: calc(20 * var(--res));
  height: calc(20 * var(--res));
  margin: 5px;
  //background-color: blueviolet;
  animation: 20s linear infinite;
  &::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: $white-color;
  }
  @for $i from 1 through $number_ball {
    &:nth-of-type(#{$i}) {
      @if $i % 2 == 0 {
        animation-name: ballAnimationLeft#{$i};
      } @else {
        animation-name: ballAnimationRight#{$i};
      }
      animation-duration: random(10000) + 6000ms;
      animation-delay: random(6000) + 100ms;
    }
    @keyframes ballAnimationLeft#{$i} {
      $random: 1 + random(10) / 10; // TODO delete ?
      0% {
        transform: translateX(110vw)
          translateY(random(100) + vh);
      }
      100% {
        transform: translateX(0vw)
          translateY(random(100) + vh);
      }
    }
    @keyframes ballAnimationRight#{$i} {
      $random: 1 + random(10) / 10;
      0% {
        transform: translateX(0vw)
          translateY(random(100) + vh);
      }
      100% {
        transform: translateX(110vw)
          translateY(random(100) + vh);
      }
    }
  }
}


  //animation: ballAnimation 15s linear infinite;
  //animation-duration: calc(15s / random(10));




